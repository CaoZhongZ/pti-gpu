{
  "version": 2,
  "configurePresets": [
    {
      "name": "default",
      "displayName": "Default Ninja Config",
      "description": "Default build using Ninja generator and OneAPI",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_TOOLCHAIN_FILE": "${sourceDir}/cmake/toolchains/icpx_toolchain.cmake"
      }
    },
    {
      "name": "default-debug",
      "inherits": "default",
      "displayName": "Default Ninja Config",
      "description": "Default Debug build using Ninja generator and OneAPI",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug"
      }
    },
    {
      "name": "make",
      "inherits": "default",
      "displayName": "Default Make Config",
      "description": "Default build using Makefile generator and OneAPI",
      "generator": "Unix Makefiles"
    },
    {
      "name": "make-debug",
      "inherits": "default-debug",
      "displayName": "Default Debug Make Config",
      "description": "Default Debug build using Makefile generator and OneAPI",
      "generator": "Unix Makefiles"
    },
    {
      "name": "oneAPI",
      "inherits": "default",
      "displayName": "Build pti for oneAPI",
      "description": "OneAPI has its libraries under lib opposed to lib64",
      "binaryDir": "${sourceDir}/build-${presetName}",
      "cacheVariables": {
        "CMAKE_INSTALL_LIBDIR": "lib",
        "PTI_PRESET_USED": "${presetName}"
      }
    },
    {
      "name": "asan",
      "inherits": "default",
      "displayName": "AddressSanitizer Test Config",
      "description": "Build configuration for testing PTI with AddressSanitizer",
      "binaryDir": "${sourceDir}/build-${presetName}",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_TOOLCHAIN_FILE": "${sourceDir}/cmake/toolchains/icpx_asan_toolchain.cmake",
        "PTI_SANITIZE": true
      },
      "environment": {
        "NEOReadDebugKeys": "1",
        "DisableDeepBind": "1",
        "ASAN_OPTIONS": "suppressions=${sourceDir}/test/suppressions/ASan.supp,detect_leaks=1,check_initialization_order=1,alloc_dealloc_mismatch=0,new_delete_type_mismatch=0,halt_on_error=1,use_sigaltstack=0",
        "LSAN_OPTIONS": "suppressions=${sourceDir}/test/suppressions/LSan.supp,use_unaligned=1",
        "UBSAN_OPTIONS": "print_stacktrace=1"
      }
    },
    {
      "name": "fuzz",
      "inherits": "asan",
      "displayName": "Fuzz Testing Config",
      "description": "Build configuration for fuzz testing with libFuzzer.",
      "binaryDir": "${sourceDir}/build-${presetName}",
      "cacheVariables": {
        "PTI_FUZZ": true,
        "CMAKE_TOOLCHAIN_FILE": "${sourceDir}/cmake/toolchains/icpx_fuzz_toolchain.cmake"
      }
    },
    {
      "name": "tsan",
      "inherits": "asan",
      "displayName": "ThreadSanitizer Test Config",
      "description": "Build configuration for thread sanitizer.",
      "environment": {
        "ONEAPI_DEVICE_SELECTOR": "level_zero:gpu",
        "TSAN_OPTIONS": "suppressions=${sourceDir}/test/suppressions/TSan.supp exitcode=0"
      },
      "cacheVariables": {
        "CMAKE_TOOLCHAIN_FILE": "${sourceDir}/cmake/toolchains/icpx_tsan_toolchain.cmake"
      }
    },
    {
      "name": "clang",
      "inherits": "default",
      "displayName": "Clang Test Config",
      "description": "Build Configuration for building PTI without ICPX",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_TOOLCHAIN_FILE": "${sourceDir}/cmake/toolchains/clang_toolchain.cmake"
      }
    }
  ],
  "buildPresets": [
  {
    "name": "default",
    "configurePreset": "default"
  },
  {
    "name": "make",
    "configurePreset": "make"
  },
  {
    "name": "asan",
    "configurePreset": "asan"
  },
  {
    "name": "fuzz",
    "configurePreset": "fuzz"
  },
  {
    "name": "tsan",
    "configurePreset": "tsan"
  }
  ],
  "testPresets": [
  {
    "name": "default",
    "configurePreset": "default",
    "environment": {
      "LD_LIBRARY_PATH": "${sourceDir}/build/lib:$penv{LD_LIBRARY_PATH}"
    }
  },
  {
    "name": "make",
    "configurePreset": "make",
    "environment": {
      "LD_LIBRARY_PATH": "${sourceDir}/build/lib:$penv{LD_LIBRARY_PATH}"
    }
  },
  {
    "name": "asan",
    "configurePreset": "asan",
    "environment": {
      "LD_LIBRARY_PATH": "${sourceDir}/build-${presetName}/lib:$penv{LD_LIBRARY_PATH}"
    }
  },
  {
    "name": "fuzz",
    "configurePreset": "fuzz",
    "environment": {
      "LD_LIBRARY_PATH": "${sourceDir}/build-${presetName}/lib:$penv{LD_LIBRARY_PATH}"
    }
  },
  {
    "name": "tsan",
    "configurePreset": "tsan",
    "environment": {
      "LD_LIBRARY_PATH": "${sourceDir}/build-${presetName}/lib:$penv{LD_LIBRARY_PATH}"
    }
  }
  ]
}
